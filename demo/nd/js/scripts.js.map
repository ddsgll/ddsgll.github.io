{"version":3,"sources":["main.js","compare/compare.js","gridview/gridview.js","gui/gui.js","info/info.js","mobile/mobile.js","racurse/racurse.js","menu/menu.js","item-arrow/item-arrow.js","more/more.js"],"names":[],"mappingszLA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AChjHA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACrBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AClCA;ACAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AC3DA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AClBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AC3EA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"scripts.js","sourcesContent":["//=========================================================================\r\n//=========================================================================\r\n//\r\n// Главный скрипт\r\n\r\n// Данные - как образец\r\nvar data =\r\n[\r\n\t{\r\n\t\ttitle: \"Памяник русской учительнице\",\r\n\t\tlocation: \"г. Махачкала, пр. Петра I\",\r\n\t\tdate: \"2001 / 2015\",\r\n\t\tlink: \"#link1\",\r\n\t\tracurses: [\r\n\t\t\t{\r\n\t\t\t\timageBefore: 'img/photo/big1.png',\r\n\t\t\t\timageAfter: 'img/photo/big2.png'\r\n\t\t\t},\r\n\r\n\t\t\t{\r\n\t\t\t\timageBefore: 'img/photo/big1.png',\r\n\t\t\t\timageAfter: 'img/photo/big2.png'\r\n\t\t\t}\r\n\t\t]\r\n\t},\r\n\t\r\n\t{\r\n\t\ttitle: \"Привокзальная площадь\",\r\n\t\tlocation: \"г. Махачкала, ул. Азизова\",\r\n\t\tdate: \"2001 / 2015\",\r\n\t\tlink: \"#link2\",\r\n\t\tracurses: [\r\n\t\t\t{\r\n\t\t\t\timageBefore: 'img/photo/2.jpg',\r\n\t\t\t\timageAfter: 'img/photo/2.jpg'\r\n\t\t\t}\r\n\t\t]\r\n\t},\r\n\t\r\n\t{\r\n\t\ttitle: \"Джума мечеть\",\r\n\t\tlocation: \"г. Махачкала, ул. Азизова\",\r\n\t\tdate: \"2001 / 2015\",\r\n\t\tlink: \"#link3\",\r\n\t\tracurses: [\r\n\t\t\t{\r\n\t\t\t\timageBefore: 'img/photo/3.jpg',\r\n\t\t\t\timageAfter: 'img/photo/3.jpg'\r\n\t\t\t}\r\n\t\t]\r\n\t},\r\n\r\n\t{\r\n\t\ttitle: \"Какая-то высотка в америке\",\r\n\t\tlocation: \"г. Махачкала, ул. Азизова\",\r\n\t\tdate: \"2001 / 2015\",\r\n\t\tlink: \"#link4\",\r\n\t\tracurses: [\r\n\t\t\t{\r\n\t\t\t\timageBefore: 'img/photo/4.jpg',\r\n\t\t\t\timageAfter: 'img/photo/4.jpg'\r\n\t\t\t}\r\n\t\t]\r\n\t}\r\n];\r\n\r\n\r\nfunction App(options) {\r\n\r\n\tthis.options = options || {};\r\n\tthis.currentItem = 0;\r\n\r\n\t// Устанавливаем UI согласно текущей локации\r\n\tthis.setLocationInfo = function(index) {\r\n\r\n\t\tvar place = this.data[index]\r\n\r\n\t\tthis.currentItem = index;\r\n\r\n\t\tconsole.log('Init location: ' + place.title);\r\n\r\n\t\t// Установка изображений сравнения\r\n\t\tvar\r\n\t\t\timageBefore = place.racurses[0].imageBefore,\r\n\t\t\timageAfter  = place.racurses[0].imageAfter;\r\n\t\t\r\n\t\tsetCompareImages(imageBefore, imageAfter);\r\n\r\n\t\t// Установка данных о локации\r\n\t\tsetInfoData(place.title, place.location, place.date, place.link);\r\n\r\n\t\t// Установка ракурсов\r\n\t\tinitRacurses(place.racurses);\r\n\r\n\t\t// Установка изображений на кнопки следующей и предыдущей локации\r\n\t\tvar\r\n\t\t\tnextArrowImage = this.getArrowImages().next,\r\n\t\t\tprevArrowImage = this.getArrowImages().prev;\r\n\r\n\t\tsetArrowsImages(prevArrowImage, nextArrowImage);\r\n\r\n\t\tsetCounter( index + 1 + \" / \" + this.amount );\r\n\r\n\t}\r\n\r\n\r\n\t// Инициализация приложения с массивом данных\r\n\tthis.init = function(data) {\r\n\r\n\t\tif (data === undefined || data.length === 0) {\r\n\t\t\tconsole.log('Нет данных');\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tthis.data   = data;\r\n\t\tthis.amount = this.data.length;\r\n\r\n\t\tthis.setLocationInfo( this.currentItem );\r\n\r\n\t\tsetCounter( \"1 / \" + this.amount );\r\n\t}\r\n\r\n\r\n\t// Переключение на следующую локацию\r\n\tthis.showNextLocation = function() {\r\n\t\tconsole.log('Switching to next location...');\r\n\r\n\t\tthis.currentItem !== this.amount - 1 ? this.currentItem++ : '';\r\n\r\n\t\tthis.setLocationInfo( this.currentItem );\r\n\r\n\t\tvar selectedNumber = this.currentItem + 1;\r\n\t\tsetCounter( selectedNumber + \" / \" + this.amount );\r\n\t}\r\n\r\n\r\n\t// Переключение на предыдущую локацию\r\n\tthis.showPreviousLocation = function() {\r\n\t\tconsole.log('Switching to previous location...');\r\n\t\t\r\n\t\tthis.currentItem > 0 ? this.currentItem-- : '';\r\n\r\n\t\tthis.setLocationInfo( this.currentItem );\r\n\r\n\t\tvar selectedNumber = this.currentItem + 1;\r\n\t\tsetCounter( selectedNumber + \" / \" + this.amount );\r\n\t}\r\n\r\n\r\n\t// Получение изображений для стрелок\r\n\tthis.getArrowImages = function() {\r\n\r\n\t\tvar imageData = {};\r\n\r\n\t\t// Установка изображения предыдущей локации\r\n\t\tif (this.currentItem === 0)\r\n\t\t\timageData.prev = undefined;\r\n\t\t\r\n\t\telse\r\n\t\t\timageData.prev = this.data[ this.currentItem - 1 ].racurses[0].imageAfter;\r\n\r\n\r\n\t\t// Установка изображения следующей локации\r\n\t\tif (this.currentItem === this.amount - 1)\r\n\t\t\timageData.next = undefined;\r\n\r\n\t\telse\r\n\t\t\timageData.next = this.data[ this.currentItem + 1 ].racurses[0].imageAfter;\r\n\r\n\r\n\t\treturn imageData;\r\n\t}\r\n\r\n}\r\n\r\n\r\n// Создаем объект класса APP\r\nvar app = new App();\r\n\r\n\r\n// Инициализация приложения\r\napp.init(data);\r\n\r\n//\r\n//=========================================================================\r\n//=========================================================================","//=========================================================================\r\n//=========================================================================\r\n//\r\n// Блок сравнения .compare\r\n\r\n// Инициализация плагина перетаскивания\r\nvar dragger = new Draggabilly( '.compare__dragger', {\r\n\taxis: 'x',\r\n\tcontainment: '.compare',\r\n\thandle: '.compare__dragger--circle'\r\n});\r\n\r\n/*\r\nФункция для замены изображений в блоке\r\n======================================\r\n\t— beforeSrc: изображение До\r\n\t— afterSrc: изображение После\r\n======================================\r\n*/ \r\nfunction setCompareImages(beforeSrc, afterSrc) {\r\n\r\n\t// Получаем блоки с изображениями\r\n\tvar\r\n\t\timageBefore = $(\".compare__image.image-before .image-content\"),\r\n\t\timageAfter  = $(\".compare__image.image-after .image-content\");\r\n\r\n\t// Устанавливаем ширину по ширине экрана\r\n\timageBefore.width( $(window).width() );\r\n\timageAfter.width( $(window).width() );\r\n\r\n\t// Анимируем фейдом и устанавливаем на фон изображение До\r\n\timageBefore\r\n\t\t.animate({\r\n\t\t\topacity: 0\r\n\t\t}, 400, function() {\r\n\t\t\t$(this)\r\n\t\t\t\t.css(\"background\", \"transparent url('\" + beforeSrc + \"') no-repeat center\")\r\n\t\t\t\t.animate({opacity: 1}, 400);\r\n\t\t});\r\n\r\n\t// Анимируем фейдом и устанавливаем на фон изображение После\r\n\timageAfter\r\n\t\t.animate({\r\n\t\t\topacity: 0\r\n\t\t}, 400, function() {\r\n\t\t\t$(this)\r\n\t\t\t\t.css(\"background\", \"transparent url('\" + afterSrc + \"') no-repeat center\")\r\n\t\t\t\t.animate({opacity: 1}, 400);\r\n\t\t});\r\n\r\n}\r\n\r\n\r\nfunction setImageWidth() {\r\n\r\n\t// Получаем контейнер блока с изображением После\r\n\tvar imageAfter = $(\".compare__image.image-after\");\r\n\r\n\t// Вычисляем новую ширину (ширина окна минус сумма сдвига ползунка с левого края и половины его ширины)\r\n\tvar newWidth = $(window).width() - ($(\".compare__dragger--circle\").offset().left + $(\".compare__dragger--circle\").width() / 2)\r\n\r\n\t// Устанавливаем ширину контейнера согласно вычисленной ширине\r\n\timageAfter.width( newWidth + 64 );\r\n\r\n}\r\n\r\n\r\n// ФИксим ширину при загрузке страницы\r\nsetImageWidth();\r\n\r\n\r\n// Событие, вызываемое при перетаскивании ползунка\r\ndragger.on( 'dragMove', function( event, pointer, moveVector ) {\r\n\r\n\tsetImageWidth();\r\n\r\n});\r\n\r\n//\r\n//=========================================================================\r\n//=========================================================================","//=========================================================================\r\n//=========================================================================\r\n//\r\n// Блок просмотра всех локаций\r\n\r\n$(document).ready(function() {\r\n\tfillGrid(app.data);\r\n\tinitGridviewSlider();\r\n});\r\n\r\n// Функция запуска работы со слайдером в сетке (необходима полная загрузка Dom)\r\nfunction initGridviewSlider() {\r\n\r\n\t// Пихаем картинки в фон, чтобы не было пакостей при разнобое в пропорциях изображений\r\n\t$('.gridview__item-image').each(function() {\r\n\r\n\t\t// Берем сорс\r\n\t\tvar src = $(this).find('img').attr('src');\r\n\r\n\t\t// Ремувим пикчу\r\n\t\t$(this).find('img').remove();\r\n\r\n\t\t// Ставим фон с указанным сорсом \r\n\t\t$(this).css(\"background\", \"#000 url('\" + src + \"') no-repeat center\")\r\n\r\n\t});\r\n\r\n\t// После чего запускаем плагин слайдера с панелями\r\n\t$(\"#gridSlider\").flickity({\r\n\t\tcellSelector: '.gridview__slide',\r\n\t\twrapAround: true,\r\n\t\tprevNextButtons: false,\r\n\t\tsetGallerySize: false\r\n\t});\r\n\t\r\n\t// Получаем переключалку\r\n\tvar gridSwitcher = $(\".gridview__switcher\");\r\n\r\n\t// При клике перелючаем активный класс на параключалке и просмотре сетки\r\n\tgridSwitcher.on('click', function() {\r\n\r\n\t\t$(this).toggleClass('active');\r\n\t\t$(\".gridview\").toggleClass('gridview--active');\r\n\r\n\t});\r\n\r\n\r\n\r\n\t$(\".gridview__item\").on('click', function() {\r\n\r\n\t\tvar index = $(this).data(\"index\");\r\n\r\n\t\tapp.setLocationInfo( index );\r\n\r\n\t\t$(\".gridview\").removeClass('gridview--active');\r\n\t\t$(\".gridview__switcher\").removeClass('active');\r\n\r\n\t});\r\n}\r\n\r\n\r\n// Устанавливаем счетчик слайдов в вновое значение\r\nfunction setCounter(string) {\r\n\r\n\t$(\".gridview__counter\").text(string);\r\n\r\n}\r\n\r\n\r\n// Заполняем сетку блоками\r\nfunction fillGrid(data) {\r\n\r\n\t// Получаем количество нужных слайдов\r\n\tvar slidesAmount = Math.floor( data.length / 8 ) + 1;\r\n\t\r\n\t// Для каждого слайда\r\n\tfor (var i = 1; i <= slidesAmount; i++) {\r\n\r\n\t\t// Создаем элемент\r\n\t\tvar newSlide = $(\"<div class='gridview__slide'></div>\");\r\n\r\n\t\t// В цикле на каждые 8 элементов\r\n\t\tfor (var j = (i*8 - 8); j <= (i*8 - 1); j++) {\r\n\r\n\t\t\t// Проверяем, чтобы не выйти за длину массива\r\n\t\t\tif (j > data.length - 1)\r\n\t\t\t\treturn;\r\n\r\n\r\n\t\t\t// Получаем строки с названием и фотографией локации\r\n\t\t\tvar title = data[j].title;\r\n\t\t\tvar image = data[j].racurses[0].imageAfter;\r\n\r\n\t\t\t// Составляем html-строку\r\n\t\t\tvar htmlString = \r\n\t\t\t'<div class=\"gridview__item\" data-index=\"' + j + '\">' +\r\n\t            '<div class=\"gridview__item-title\">' + title + '</div>' +\r\n\t            '<div class=\"gridview__item-image\"><img src=\"' + image + '\" alt=\"\"/></div>' +\r\n          \t'</div>';\r\n\r\n          \t// Создаем элемент\r\n          \tvar gridElement = $(htmlString);\r\n\r\n          \t// Вставляем элемент в слайд\r\n          \tnewSlide.append(gridElement);\r\n\r\n          \t// И вставляем слайд в слайдер\r\n\t\t\t$(\".gridview__slider\").append(newSlide);\r\n\t\t}\r\n\t}\r\n}\r\n//\r\n//=========================================================================\r\n//=========================================================================","//\r\n//\r\n//\r\n// Ну тут все просто, чувак\r\n\r\n// ББерем переключалку\r\nvar switcher = $(\".gui__switcher\");\r\n\r\n// При нажатии переключаем класс активности кнопке и телу страницы\r\n// На класс в теле страницы завязаны стили некоторых элементов, которые нужно скрывать\r\n// При переходе в режим просмотра\r\nswitcher.on('click', function() {\r\n\r\n  $(this).toggleClass('active');\r\n\r\n  $('body').toggleClass('gui--show');\r\n\r\n});\r\n//\r\n//\r\n//\r\n//","//=========================================================================\r\n//=========================================================================\r\n//\r\n// Блок информации о текущей локации .info\r\n\r\n/*\r\nФункция для замены информации в блоке\r\n======================================\r\n\t— title: название локации\r\n\t— location: адрес локации\r\n\t— date: даты фотографий до и после\r\n======================================\r\n*/ \r\nfunction setInfoData(title, location, date, link) {\r\n\r\n\t// Берем элементы блока и прячем их\r\n\t$('.info__title, .info__location, .info__date')\r\n\t\t.animate({\r\n\t\t\topacity: 0\r\n\t\t}, 400, function() {\r\n\t\t\t\r\n\t\t\t// Меняем содержимое\r\n\t\t\t$('.info__title').text(title);\r\n\t\t\t$('.info__location').text(location);\r\n\t\t\t$('.info__date').text(date);\r\n\t\t\t$('.more__open').attr(\"href\", link);\r\n\r\n\t\t\t// И \"появляем\" обратно\r\n\t\t\t$(this).animate({opacity: 1}, 400);\r\n\t\t});\r\n}\r\n\r\n//\r\n//=========================================================================\r\n//=========================================================================","// .mobile scripts goes here","//=========================================================================\r\n//=========================================================================\r\n//\r\n// Блок переключалок между ракурсами\r\n\r\n/*\r\nФункция для установки изображений в блоке ракурсов\r\n======================================\r\n\t— array: массив с объектами\r\n\t{\r\n\t\timageBefore: 'src/...' — строка с путем к изображению До\r\n\t\timageAfter: 'src/...' — строка с путем к изображению После\r\n\t}\r\n======================================\r\n*/ \r\n\r\nfunction initRacurses(array) {\r\n\t\r\n\t// Сбрасываем сожержимое блока ракурсом \r\n\t$(\".racurse\").html(\"<span>Выберите ракурс</span>\");\r\n\r\n\t// Для каждого объекта массива\r\n\tarray.forEach(function(el,arr,i) {\r\n\r\n\t\t// Создаем элемент блока\r\n\t\tvar item = $('<div class=\"racurse__item\"></div>');\r\n\r\n\t\t// СОздаем картинку с путем к картинке\r\n\t\tvar image = $('<img src=\"' + el.imageAfter + '\"/>');\r\n\r\n\t\t// Записываем в data-атрибуты пути к картинкам до и после для данного ракурса\r\n\t\t// И запихиваем картинку в элемент\r\n\t\titem\r\n\t\t\t.data(\"before\", el.imageBefore)\r\n\t\t\t.data(\"after\", el.imageAfter)\r\n\t\t\t.append(image)\r\n\r\n\t\t// Добавляем элемент к блоку\r\n\t\t$(\".racurse\").append(item);\r\n\r\n\t});\r\n\r\n\r\n\t// При клике на ракурс\r\n\t$(\".racurse__item\").on('click', function() {\r\n\r\n\t\t// Вызываем функцию замены фотографий\r\n\t\t// в блоке .compare из data-аттрибутов выбранного ракурса\r\n\t\tsetCompareImages( $(this).data(\"before\"), $(this).data(\"after\") )\r\n\r\n\t\t// Переключаем активный класс на выбранный ракурс\r\n\t\t$(\".racurse__item\").removeClass('racurse__item--active');\r\n\t\t$(this).addClass('racurse__item--active');\r\n\t});\r\n\t\r\n}\r\n\r\n//\r\n//=========================================================================\r\n//========================================================================= ","//\r\n//\r\n//\r\n// Тут все просто. Берем бургер и меню\r\nvar burger = $('.menu__burger')\r\nvar menu   = $('.menu')\r\n\r\n// И делаем бутер\r\nburger.on('click', function(e) {\r\n\r\n\t$(this).toggleClass('menu__burger--active');\r\n\r\n\tmenu.toggleClass('menu--active');\r\n\r\n});\r\n//\r\n//\r\n//\r\n//","//=========================================================================\r\n//=========================================================================\r\n//\r\n// Блок переключалок между локациями\r\n\r\n/*\r\nФункция для установки фоновых изображений в переключалки\r\n======================================\r\n\t— prevImage: изображение для предыдущей локации\r\n\t— nextImage: изображение для следующей локации\r\n======================================\r\n*/ \r\nfunction setArrowsImages(prevImage, nextImage) {\r\n\r\n\t// Если первый параметр не определен,\r\n\t// значит текущая локация первая и прячем переключалку\r\n\tif (prevImage === undefined)\r\n\t\t$(\".item-arrow.arrow-prev\")\r\n\t\t\t.addClass('disabled')\r\n\t\t\t.animate({opacity: 0}, 400);\r\n\r\n\t// Иначе удаляем класс неактивности, фейдим, меняем фоновую картинку и показываем обратно\r\n\telse {\r\n\t\t$(\".item-arrow.arrow-prev\")\r\n\t\t\t.removeClass('disabled')\r\n\t\t\t.animate({\r\n\t\t\t\topacity: 0\r\n\t\t\t}, 400, function() {\r\n\t\t\t\t$(this)\r\n\t\t\t\t\t.css(\"background\", \"#000 url('\" + prevImage + \"') no-repeat center\")\r\n\t\t\t\t\t.animate({opacity: 1}, 400);\r\n\t\t\t});\r\n\t}\r\n\r\n\r\n\t// Если второй параметр не определен,\r\n\t// значит текущая локация последняя и прячем переключалку\r\n\tif (nextImage === undefined)\r\n\t\t$(\".item-arrow.arrow-next\")\r\n\t\t\t.addClass('disabled')\r\n\t\t\t.animate({opacity: 0}, 400);\r\n\r\n\t// Иначе удаляем класс неактивности, фейдим, меняем фоновую картинку и показываем обратно\r\n\telse {\r\n\t\t$(\".item-arrow.arrow-next\")\r\n\t\t\t.removeClass('disabled')\r\n\t\t\t.animate({\r\n\t\t\t\topacity: 0\r\n\t\t\t}, 400, function() {\r\n\t\t\t\t$(this)\r\n\t\t\t\t\t.css(\"background\", \"#000 url('\" + nextImage + \"') no-repeat center\")\r\n\t\t\t\t\t.animate({opacity: 1}, 400);\r\n\t\t\t});\r\n\t}\r\n\r\n}\r\n\r\n\r\n// Переходим на следующую локацию\r\n$(\".item-arrow.arrow-next\").on('click', function() {\r\n\t\r\n\tapp.showNextLocation();\r\n\r\n});\r\n\r\n\r\n// Переходим на предыдущую локацию\r\n$(\".item-arrow.arrow-prev\").on('click', function() {\r\n\t\r\n\tapp.showPreviousLocation();\r\n\r\n});\r\n\r\n//\r\n///=========================================================================\r\n//==========================================================================","//=========================================================================\n//=========================================================================\n//\n// Блок загрузки информации о локации\n\n// При клике по крестику закрываем блок\n$(\".more__close\").on('click', function() {\n\n\t$(\".more\").removeClass(\"more--active\");\n\t$(this).removeClass(\"active\");\n\n});\n\n\n// При клике на кнопку \"подробнее\"\n$(\".more__open\").on('click', function(e) {\n\n\t// Отменяем переход по ссылке\n\t// e.preventDefault();\n\n\n\t// Включаем кнопке режим загрузки\n\t$(this).addClass(\"loading\");\n\n\n\t// Обнуляем содеримое контейнера\n\t// $(\".more__container\").html(\"\");\n\n\n\t// Берем адрес из ссылки\n\tvar href = $(this).attr(\"href\");\n\n\n\t// Тут код по загрузке данных из аякса в блок с контентом\n\t// ...\n\n\t// Фейковая загрузка для демонстрации анимации\n\n\tsetTimeout(function() {\n\t\t$(\".more\").addClass(\"more--active\");\n\t\t$(\".more__close\").addClass(\"active\");\n\t\t$(\".more__open\").removeClass(\"loading\");\n\t}, 2000);\n\n\n\t// После чего в коллбеке success показываем блок с информацией\n\t// $(\".more\").addClass(\"more--active\");\n\n\n\t// Делаем видимой кнопку закрытия\n\t// $(\".more__close\").addClass(\"active\");\n\n\n\t// И убираем у кнопки класс загрузки\n\t// $(this).removeClass(\"loading\");\n\n\n});\n\n//\n//=========================================================================\n//========================================================================="],"sourceRoot":"/source/"}